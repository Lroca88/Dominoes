@model Dominoes.Models.Game

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Game</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.GameID)

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GameComplete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.GameComplete, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WinningScore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("WinningScore",
                                      new SelectList(
                                         new List<Object>{
                                           new { value = 75 , text = "75"  },
                                           new { value = 100 , text = "100" }
                                         },
                                         "value",
                                         "text",
                                        Model.WinningScore),
                                      htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WinningScore, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.WinningTeam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WinningTeam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WinningTeam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GameSerieID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GameSerieID", ViewBag.GameSerieID as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GameSerieID, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.TeamPlayer1 == Model.TeamPlayer2) //Team Game
        {
            <div class="form-group" id="Team1Show">
                <h2 class="col-md-offset-2 col-md-10"> <span class="label label-warning">Team 1</span></h2>
            </div>
        }
        else // War
        {
            <div class="form-group" id="Team1Show">
                <h2 class="col-md-offset-2 col-md-10"> <span class="label label-danger">This is WAR</span></h2>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Player1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("Player1", ViewBag.Players as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player1, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.TeamPlayer1, htmlAttributes: new { @class = "hidden control-label col-md-2" })
            <div class="col-md-4 hidden">
                @Html.EditorFor(model => model.TeamPlayer1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeamPlayer1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("Player2", ViewBag.Players as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player2, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.TeamPlayer2, htmlAttributes: new { @class = "hidden control-label col-md-2" })
            <div class="col-md-4 hidden">
                @Html.EditorFor(model => model.TeamPlayer2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeamPlayer2, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.TeamPlayer1 == Model.TeamPlayer2) //Team Game
        {
            <div class="form-group" id="Team1Show">
                <h2 class="col-md-offset-2 col-md-10"> <span class="label label-warning">Team 2</span></h2>
            </div>
        }

        @if (Model.TeamPlayer3 > 0)  // If Player3 exist
        { 
            <div class="form-group">
                @Html.LabelFor(model => model.Player3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("Player3", ViewBag.Players as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Player3, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.TeamPlayer3, htmlAttributes: new { @class = "hidden control-label col-md-2" })
                <div class="col-md-4 hidden">
                    @Html.EditorFor(model => model.TeamPlayer3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TeamPlayer3, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (Model.TeamPlayer4 > 0) // If Player4 exist
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Player4, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("Player4", ViewBag.Players as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Player4, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.TeamPlayer4, htmlAttributes: new { @class = "hidden control-label col-md-2" })
                <div class="col-md-4 hidden">
                    @Html.EditorFor(model => model.TeamPlayer4, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TeamPlayer4, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
